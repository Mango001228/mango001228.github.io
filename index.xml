<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mango&#39;s&#39; Blog Site</title>
    <link>https://mango001228.github.io/</link>
    <description>Recent content on Mango&#39;s&#39; Blog Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Thu, 22 Sep 2022 21:16:53 +0800</lastBuildDate><atom:link href="https://mango001228.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Ssm</title>
      <link>https://mango001228.github.io/post/ssm/</link>
      <pubDate>Thu, 22 Sep 2022 21:16:53 +0800</pubDate>
      
      <guid>https://mango001228.github.io/post/ssm/</guid>
      <description>SSM Spring SpringMVC Maven高级 SpringBoot MyBatisPlus Spring 简化开发，降低企业级开发的复杂性 IoC AOP 事务处理 框架整合，高效整合其他技术，提高企业级应用开发与运行效率 MyBatis MyBatis-plus Struts Struts2 Hibernate &amp;hellip;&amp;hellip; Spring主流技术 Spring Framework —— Spring底层框架 Spring Boot —— Spring加速开发 Spring Cloud —— 分布式开发 Spring报错，从下往上阅读报错信息 Spring Framework系统架构 Spring Framework学习路线 核心概念 IoC/DI
IoC容器
Bean
目标：充分解耦 使用IoC容器管理bean(IoC) 在IoC容器内将有依赖关系的bean进行绑定(DI) 最终效果 使用对象时，不仅可以从IoC容器中获取，并且获取到的bean已经绑定了所以的依赖关系 IoC入门案例思路分析 DI入门案例思路分析 bean bean基础配置 bean别名配置 bean作用范围配置 bean作用范围说明 为什么bean默认单例？—— 可重复实用的 不需要反复创建新的对象，高效；非单例则会使用一次造一个，无穷无尽
适合交给容器进行管理的bean
表现层对象 业务层对象 数据层对象 工具对象 不适合交给容器进行管理的bean
封装实体的域对象 bean实例化 bean本质上就是对象，创建bean使用构造方法完成 实例化bean的四种方式 构造方法(常用) 无参的 静态工厂(了解) 实例工厂(了解) FactoryBean(实用) bean生命周期 生命周期：</description>
    </item>
    
    <item>
      <title>Essay</title>
      <link>https://mango001228.github.io/post/essay/</link>
      <pubDate>Thu, 11 Aug 2022 14:21:47 +0800</pubDate>
      
      <guid>https://mango001228.github.io/post/essay/</guid>
      <description>redis https://blog.csdn.net/ThinkWon/article/details/103522351
负载均衡 https://www.bilibili.com/read/cv14183412?spm_id_from=333.999.0.0
zookeeper ZooKeeper是最常用的分布式协调服务，它能够解决大多数集群问题，包括发布/订阅、负载均衡、命令服务、分布式协调/通知、集群管理、Master选举、分布式锁和分布式队列等。同时针对集群资源管理的需求，又衍生了Hadoop YARN
SSM https://www.yuque.com/docs/share/1194b3d8-0db9-4c16-8ea0-3ebd1f44c908?#%20%E3%80%8ASpring%E3%80%8B
BUG解决合集 Establishing SSL connection without server&amp;#39;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&amp;#39;t set. For compliance with existing applications not using SSL the verifyServerCertificate property is set to &amp;#39;false&amp;#39;. You need either to explicitly disable SSL by setting useSSL=false, or set useSSL=true and provide truststore for server certificate verification.</description>
    </item>
    
    <item>
      <title>Sql</title>
      <link>https://mango001228.github.io/post/sql/</link>
      <pubDate>Sat, 06 Aug 2022 12:50:19 +0800</pubDate>
      
      <guid>https://mango001228.github.io/post/sql/</guid>
      <description>基础掌握：MySQL概述;SQL；函数；约束；多表查询；事务
进阶掌握：存储引擎；索引；SQL优化；视图/存储过程/触发器/锁/InnoDB核心；MySQL管理
高级掌握：日志；主从复制；分库分表；读写分离
sql:Structued Query Language,结构化查询语言
SQL语法篇： *通用语法规范： ​	1.SQL语句可以单行或多行书写，以分号结尾
​	2.SQL语句可以使用空格/缩进来增强语句的可读性
​	3.MySQL数据库的SQL语句不区分大小写，关键字建议大写
​	4.注释：单行：&amp;ndash;注释内容&amp;ndash; 或者 #注释内容
​	多行：/注释内容/
​	*DDL数据库定义语言（数据库，表，字段）;DML数据库操作语言（增删改）;DQL数据库查询语言（查）;DCL数据库控制语言，创建数据用户、控制数据库的访问权限
**创建MySQL数据库字符集不建议设置utf8（最多三个字节），MySQL中存在特殊字符是四个字节，建议设置为uft8mb4
*	查询所有数据库：SHOW DATABASES; *	查询当前数据库：SELECT DATABASE(); *	创建：CREATE DATABASE [IF NOT EXISTS] 数据库名 [ DEFAULT CHARSET 字符集] [ COLLATE 排序规则] ； *	删除：DROP DATABASE [ IF EXISTS ] 数据库名； *	使用：USE 数据库名； DDL&amp;mdash;表操作&amp;mdash;查询 查询当前数据库所有表：SHOW TABLES; 查询表结构：DESC 表名； 查询指定表的建表语句：SHOW CREATE TABLE 表名; DDL&amp;mdash;表操作&amp;mdash;创建 CREATE TABLE 表名（
​	字段1 字段1类型 [COMMENT 字段1注释]，</description>
    </item>
    
    <item>
      <title>UnstallMySQL</title>
      <link>https://mango001228.github.io/post/unstallmysql/</link>
      <pubDate>Fri, 05 Aug 2022 15:42:12 +0800</pubDate>
      
      <guid>https://mango001228.github.io/post/unstallmysql/</guid>
      <description>1.关闭MySQL服务 &amp;mdash;&amp;mdash;&amp;ndash;&amp;gt; 我的电脑&amp;ndash;右键管理&amp;ndash;服务与应用程序&amp;ndash;服务
2.控制面板卸载MySQL软件
3.删除C: Program Files (x86)\MySQL该目录下剩余了所有文件，包括mysql文件夹
4.windows+R运行“regedit”文件，打开注册表。 删除注册表：HKEY_LOCAL_MACHINESYSTEM\ControlSet001\Services\Eventlog\Application\MySQL文件夹，如没有则不用管
5.删除C盘下的C:ProgramData\MySQL 所有文件
6.删除C:\Users\你的用户名字\AppData\Roaming\MySQL
7.完成，再次重装即可</description>
    </item>
    
    <item>
      <title>命令行指令</title>
      <link>https://mango001228.github.io/post/commandlines/</link>
      <pubDate>Fri, 05 Aug 2022 15:17:23 +0800</pubDate>
      
      <guid>https://mango001228.github.io/post/commandlines/</guid>
      <description>命令行知识点：
1.Windows 是dir查看目录，Linux与mac 是ls查看目录 2.cd进入目录，例如Program Files的需要在两边加上双引号，即&amp;quot;Program Files&amp;quot;</description>
    </item>
    
    <item>
      <title>安装与配置MySQL</title>
      <link>https://mango001228.github.io/post/installmysql/</link>
      <pubDate>Fri, 05 Aug 2022 15:05:59 +0800</pubDate>
      
      <guid>https://mango001228.github.io/post/installmysql/</guid>
      <description>问题汇总：
net start mysql 发生错误 安装MySQL：
官方下载所需版本，双击启动安装程序 点击developer default ，再next，再点击back（帮助选择所需开发工具），再选择custom（经典自定义安装），更改install directory和data directory，选择自己所需位置，不建议默认安装至c盘，可能会导致权限问题 一键next+execute，设置数据库密码，最后check，确保不出错 在mysql/bin目录下cmd，mysql -u root -p 登录mysql成功后，再验证版本号mysql &amp;ndash;version，能正确显示即安装成功 配置环境：
系统变量Path中，新增MySQL bin地址即可 ，例：D:\MySQL\MySQL Server 8.0\bin win+r，cmd启动命令提示符，mysql -u root -p 验证是否能在全局启动MySQL，能跑即环境配置完毕 MySQL命令行指令：
mysql &amp;ndash;version 查询版本号 mysql -u root -p 登录mysql net stop/start mysql80 关闭/开启mysql服务 cmd &amp;mdash;&amp;mdash;-&amp;gt;services.msc进入系统服务管理 </description>
    </item>
    
    <item>
      <title>Java</title>
      <link>https://mango001228.github.io/post/java/</link>
      <pubDate>Wed, 03 Aug 2022 14:26:48 +0800</pubDate>
      
      <guid>https://mango001228.github.io/post/java/</guid>
      <description>1.null和空字符的区别： 1、**NULL：代表声明了一个空对象，不是一个字符串，可以赋给任何对象**。 空字符：代表声明了一个对象实例，这个对象实例的值是一个长度为0的空字符串。 2.在实体类中，基本数据类型建议使用其对应的包装类型——&amp;gt;Int Integer </description>
    </item>
    
    <item>
      <title>Test</title>
      <link>https://mango001228.github.io/post/test/</link>
      <pubDate>Tue, 02 Aug 2022 11:43:19 +0800</pubDate>
      
      <guid>https://mango001228.github.io/post/test/</guid>
      <description>Scoop部分</description>
    </item>
    
    <item>
      <title>Scoop</title>
      <link>https://mango001228.github.io/post/scoop/</link>
      <pubDate>Tue, 02 Aug 2022 11:09:35 +0800</pubDate>
      
      <guid>https://mango001228.github.io/post/scoop/</guid>
      <description>scoop官网：
https://scoop.sh/
github项目地址：
https://github.com/lukesampson/scoop
Scoop是一个强大的Windows包管理工具
需要满足.NET Framework 4.5+和PowerShell 5+
点击Windows PowerShall启动，win10+一般符合.NET Framework版本
查询.NET Framework版本：
$PSVersionTable.CLRVersion
查询PowerShell版本：
$PSVersionTable.PSVersion
Major为版本号</description>
    </item>
    
    <item>
      <title>Scoop创建hugo博客部署在远端仓库GitHub</title>
      <link>https://mango001228.github.io/post/blog/</link>
      <pubDate>Fri, 29 Jul 2022 14:08:18 +0800</pubDate>
      
      <guid>https://mango001228.github.io/post/blog/</guid>
      <description>博客网址:https://mango001228.github.io/
主题下载网址：themes.gohugo.io
Scoop部分:
Scoop命令安装hugo
scoop install hugo
验证是否成功
hugo version
hugo创建及上传：
hugo new site xxx 创建新博客/站点 xxx名字自拟
在根目录下工作
C:\Users\Mango\MangoBlog
主题网站克隆对应主题
git clone https://github.com/vaga/hugo-theme-m10c.git themes/m10c
默认主题启动
hugo server -D
带指定主题启动
hugo server -t m10c &amp;ndash;buildDrafts
在config.tom里设置自动启动主题 hugo server -D可直接启动
根目录下创建文章等内容
hugo new xxx/xxx.md
hugo部署到GitHub
github部署地址 hugo &amp;ndash;theme=m10c &amp;ndash;baseUrl=&amp;ldquo;https://mango001228.github.io&amp;rdquo; &amp;ndash;buildDrafts
git打包提交
进入public目录下进行打包提交
PS C:\Users\Mango\MangoBlog\public&amp;gt;
git init &amp;mdash;&amp;ndash;&amp;gt; git add . &amp;mdash;&amp;ndash;&amp;gt; git commit -m &amp;ldquo;xx的博客第x次提交&amp;rdquo;
public本地与远端仓库关联
git remote add origin https://github.com/Mango001228/mango001228.github.io.git
git push推送</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mango001228.github.io/post/javaweb/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mango001228.github.io/post/javaweb/</guid>
      <description>title: &amp;ldquo;Javaweb&amp;rdquo; date: 2022-08-11T15:57:50+08:00 draft: true
JavaWeb 网页：展现数据 数据库:存储和管理数据 javaweb程序：逻辑处理 JDBC JDBC简介 快速入门 JDBC API详解 DriverManger 1.注册驱动Class.forName(&amp;quot;&amp;quot;);
Connection 1.获取执行SQL的对象
2.管理事务
Statement ResultSet 使用方法 PreparedStatment 目的 防止sql注入问题的发生———&amp;gt;将敏感字符进行转义
使用 useServerPrepStmts=true预编译功能开启，默认是关闭的，添加在url后
数据库连接池 标准接口：DataSource&#39;
官方提供的数据库连接池标准接口，由第三方组织实现此接口 功能：获取连接 是个容器，管理分配数据库连接（Connection） Connection getConnection()
Druid数据库连接池 使用步骤 //1.导入Druid maven依赖 //2.定义配置文件 //3.加载配置文件 Properties prop = new Properties(); prop.load(new FileInputStream(&amp;#34;src/druid.properties&amp;#34;)); //4.获取连接池对象 DataSource dataSource = DruidDataSourceFactory.createDataSource(prop); //5.获取数据库连接Connection Connection connection = dataSource.getConnection(); System.out.println(connection); JDBC增删改查练习 建表 create table tb_brand( -- id 主键 自增长 id int primary key auto_increment, -- 品牌名称 brand_name varchar(20), -- 企业名称 company_name varchar(20), -- 排序字段 ordered int, -- 描述信息 description varchar(50), -- 状态： 0：禁用 1：启用 status int ); -- 添加数据 insert into tb_brand (brand_name, company_name, ordered, description, status) VALUES ( &amp;#39;三只松鼠&amp;#39;,&amp;#39;三只松鼠股份有限公司&amp;#39;,5,&amp;#39;好吃不上火&amp;#39;,0),( &amp;#39;华为&amp;#39;,&amp;#39;华为技术有限公司&amp;#39;,100,&amp;#39;华为致力于把数字世界带入每个人、每个家庭、每个组织，构建万物互联的智能世界&amp;#39;,1),( &amp;#39;小米&amp;#39;,&amp;#39;小米科技有限公司&amp;#39;,50,&amp;#39;are u ok&amp;#39;,1); select * from tb_brand; 操作相同和不同之处</description>
    </item>
    
    <item>
      <title></title>
      <link>https://mango001228.github.io/post/jvm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mango001228.github.io/post/jvm/</guid>
      <description>JVM 引言 什么是 JVM ？ 定义 Java Virtual Machine - java 程序的运行环境（Java 二进制字节码的运行环境）
好处 一次编写，别处运行 自动内存管理，垃圾回收功能 数组下标越界 越界检查 多态 比较：jvm、jre、jdk 学习 JVM 有什么用？ 面试 理解底层的实现原理 中高级程序员的必备技能 常见的 JVM 学习路线 编译过程：类加载器 ——&amp;gt; JVM内存结构 ——&amp;gt; 执行引擎 ——&amp;gt; 配合本地方法接口(方法实现类)
学习过程：JVM内存结构、GC垃圾回收、Java class、classloader、JIT Compiler即时编译器
内存结构 程序计数器 定义 Program Counter Register 程序计数器（寄存器）
作用 作用：记住下一条jvm指令的执行地址 特点 是线程私有的 不会存在内存溢出 虚拟机栈 本地方法栈 堆 方法区 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://mango001228.github.io/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8A%80%E6%9C%AF%E6%A0%88/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mango001228.github.io/post/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8A%80%E6%9C%AF%E6%A0%88/</guid>
      <description>微服务技术栈 微服务框架——SpringCloud微服务架构 认识微服务 服务架构演变 单体架构 将业务的所有功能集中在一个项目中开发，打成一个包部署
优先：架构简单、部署成本低
缺点：耦合度高
分布式架构 分布式架构需要考虑的问题 微服务 微服务技术对比 企业需求 SpringCloud 服务拆分及远程调用 服务拆分 服务拆分注意事项 不同微服务，不要重复开发相同业务 微服务数据独立，不要访问其它微服务的数据库 微服务可以将自己的业务暴露为接口，供其它微服务调用 案例：导入服务拆分Demo 服务间调用 提供者与消费者 eureka注册中心 远程调用问题 Eureka原理 搭建EurekaServer 动手实践 服务注册 单实例部署 模拟多实例部署 服务发现 Ribbon负载均衡原理 nacos注册中心 </description>
    </item>
    
  </channel>
</rss>
